%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14 (Build 18A391) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 220 56
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 220 56
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: DBCHQT+AvenirNextLTPro-Light
%!FontType1-1.0: DBCHQT+AvenirNextLTPro-Light 001.001%%CreationDate: 2/9/19% Copyright 2019 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.001) readonly def/FullName (Avenir Next LT Pro Light) readonly def/FamilyName (Avenir Next LT Pro Light) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /DBCHQT+AvenirNextLTPro-Light def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /D putdup 34 /e putdup 35 /i putdup 36 /n putdup 37 /space putdup 38 /L putdup 39 /h putdup 40 /r putdup 41 /s putdup 42 /t putdup 43 /l putdup 44 /a putdup 45 /u putdup 46 /f putdup 47 /c putdup 48 /period putreadonly def/FontBBox {-382 -411 1303 1192} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BECFA1775DB11BD9527CE96D7F8FC186B8F1A8B1A46242A8CA08C4EA67E0D187D38D4A662CF4FA12D30CCA4D275DC82E8C9C9BAAC1892E0A4ED0C08CBBA50A28AD51529A595E402C3C4372EC1D82424A16D91AF5D62EE0DCE6FDF2A3411C7AA54AAA1CF2498A5022A4F0D9668712D4D5F03A43E590D07B8F9A8684A16C4E958CC82CEE21B1BBDFB107EF4DB36F8C4C0CB47A2F785FB069A27724453E66363597C48D4A3CC4729EB17FD2ED041F953CE05166A27A74489B801230BE443167DBB736BA6FB52FBD4B34D72CFE746C3B1B188F33CA18E2D355DC65EE3D0BB512A6C1B3D77553C684124CB45BF49753BD97BF795054FA3FA77E79B98B8894D9AFE2148CB970636E025C1A6CC588E37B72F16AC614B3140B5F64236946BFF9CED861C54632D7AB9FCB98CE72A20A476EA82C2C5BB054EA802DF206DBA81609BF4465226E1A6861102A1EA68A82F66BE298856BDCC79BDF39B9A97CECCD5CD9A78C954259FBC8CEE05CE08C41FCF52D4D8FD2C7F2EBAEF8AD7AB3BE8D2E91203FFBAF3260A0A2DBBFE38E98B676D396DDCA998DAB4AB69745C05C93FE45E5DC5F9A805790CE91B169DB530CE8210A0BC41CF307B1A810606B2E648FC2C28F2A6A67006271F95ED78503B84453E6CDDBDDB31FF496E31E00B224521169A39A6CE2C6E68DB3D406D586ED90BB07DC36B4DDF85D9F4DECA95D8DDB7E30405775E0933A56A8179D7220830BA0717704E51F2DC129DDE7492459A97ADAF8354499080678AB18978042BC6DAF30A42F5FC03B595CA3121B4DE8E10C8436DEE1C8C08171A599F1D7DE7609BC7BFC6045313BB5DC55AE1549944BFC33F9A9042AA41177561B108376A9E053BC708B1F627DF72F4893A455481040F8ADE90C98121B934FFF3AB82A4E051A70A0EED5B906691B300D460187FF54B7F2A3024F5510295E6E235DA5722EE42C0B1F5A095CFAE89C396FF496D8EAB8BDC0A8CF9BB8CB491138C020BEAA5A0DF71E1E06DD54508EFDBB5CAC349D68C27DD879D5B690FDB105A817AD47D6E7FE35EBDF980578A052889D112F5FA0D3735EF9B13E0EDC56DA73C5BCA693E82600FCD1128E890EDCFEDF3D71B2162CAD34EF533F22BF91C3367B042DA73DA27CE272D76DD61EADBD8CAC4D823C4ADE9B1778B25490D8B1EBDDB7932ED05FBAE8A0B115411480FDFF7CC2AD8071FD199D081CF4EAF15F5CBEBAE697FC59B2391805805607DA5901D7BDE27769C29956E5A96F45A88486477EBB2DBCFF0202AD40860CDA3DBD4EB25CB3065A656637ABC25FD1B48439DB79ADCA35F9F9E4E331E99FCEA473F283F3C9B6088C72CD973DB4457748B7DCCECDB1F9F4522C7B8CC439535573546E9B65B1E5325CC74BC3328F84C137C215872BDD08F757AE70CAEA1FB87B587AD5D2AAA776FE7789AE6C0CF09E34F791C54608787B6D597E4699868CADD7F6E35BE7BC4A7F3BE412567DDFCAD32C574EA073451DABA75A37836DD16DE9473A9E14227253403B09ADC14223C2496A88D6713F1491EE65FBE48BA6DBAE1090E44B359622DC4747CDB6CD2E3A36F459DD2A751435957B200692D95C0D9BCD52FDC859D2C25286B87329DB4C1C3E2F12BE23894CAA0414803D0DC5B448BAD9CF5BDF15B729A4137A9618A5A44DB7D9740A15E0DA9C802B428D40ED2DD407E9C3D8DFCADA90A8C995B03DD04F921D64FB06FB465E115ABB23E074DA46741F45E9D1172AC6F234A0E6D54A0124317A2CC62D02FD14D0441496EDB981E5CB2FB21CAD1C8B4E74B0B870B20C451E1C398BD53FF4CCAD6D39EF5097A82919844EFD627EEBA5E3569D07137D9C735DD8CC496C9AC12B5595765BA13BBB7BBB8C294BCD34AB428393272FD67A609D2CC1732396350D6CD8D71770FCFC2145AF9C7674A5D0B969919ED4B9FFB1232BA02E8F1D0C30B9B17E6A78469DCAAA3F2B23CBB74869976FD0275330067C7AD4A85069CD1149E691380B279908AE2E0746BC6C08E970096810701DA7EBC06C8E14DD4FEDB20DC2D402DC226475765BC4C660672993B7F2A7B6A5A3225C8B9C665DBFAA5948AF2D9F237EF2E0BDE6361D97BE6940B4B3E00E788D9CBF979CB52E4AE538025C7C2D658D358957F4F53D16FFA8F4015EB6315A81890A75066FCBE9DA62DEA53DA29189816E1CE6EDF3006ED1A4CD403F069C863F49911CA037F56C8E0B03A72B98C10FA76DCFA83AA20D03CAB6EC7F5423B909355F2D98C1764E8B23AF944D43D0280D4CEA0FED916AD25E29C09B475A9BDB2DF2A189E04C943091A73D4EFCDF9EFC78E1E4F0A01C01990A561FB80A515691019276277FFF8C151A65846FCD31BC0AE63C8989FC6ED0EDC851D0606066127C8FC078A9D41C2D2C53E0A758F707621AEF4954D0048C8EC39AFFDA299DA56493AED6CE0C1993B18A07B8239704AEF9358B6B4B666334E8D154BA118B955A090E357749A4942E3BE9B90BFFBAB2BCD5F384C66E349B889DF4B829F337F8DE3CD6D5D76F5936C8F5066E1B371B1D439EAEAFA8A5EA9042895BA1F0C7F618C0484DA7B5186471CE2E97999743B87A4D0A87A9F59D9F3F574E89AD1DFA3ECA32EC69FAED78AC918FC93D1DAF8EBAEF9F6815F388D2A302537A6DD416526653B5DD6C9413B394BBCBB0433EF930F6DDB30A35D3235673017C89C2BACBACAC2F6C3866721D53E718DBAD88501F876F50736BA035D1888E730885ACB083BCC63B25CD28E87F8E35892E37A3E95251A4E2971249AD6B236D7E7C4DFA3836B1469C5EA66EE3B047902B0A57E0C10BA44D96742851F1F2DA65A62F6D33A3EB2BD44542231F25715382E5B0690E5246C089044E71B224118835813022C158F6F83E2357FC7A77FFFFF53BA91AFF61A996042C5F0A6CD8B6E1BF65B38511805117122D72422A472F0E037F922A1C9286ECFE1A29BAD7BD87C5C29DDFEECFC4D031592E9DAE415E1A40B8DC76B4C95789A565E1C25812083A63D8D427C7E84CD07C97045324B4AEEA32C6A61E224428D59C74304FE8AE3FE0ABD47A874EB4A784EBF3C7BF0B4AA8965A38D2C9600FEA3D754678DCDC2C508E9E4E801F44320B357258F4317D29FA3D2CE082E73878D3AA2138C0E3CA675F15850EA4D867071F6E5A857E7E675099A07FFF4E94A2B6A05F698E92230CBAD4CCAA79A6BCC0486E80AAEF1012EEDFE9061879D068AC6B01A68068F131F500FC0E0C835BD5D3DFADF7E0D5D1F8D69D23270ADB2E8B667BF51B8C4B9D578205005E4FA8024DE0E2293F191E424302AF4B990859678AEFF7A2060FD3B48B12B3369CBA9ABCE99F6D0E2BF7E722292116A31B48D3FBF0627A1986981C60617ED632BCCC1C7CD7508A62B768F6C4A740EDF14BCF2B4470A589B6A62323C612A4F4EF74C6AA58DB742F41CE679647061F9334BB560744AA18C73D54C0937FAB03877B500CF495B8008583B258A685BD9EA9A99D46D7B39E327CC6ABA899263F7FF3326B23D4AE7A51DBB92B4EF8AEEB82712E65EF485C658B36B470266F476BC814403B28682D3D214D2686B537A5771279CE6477CB1A33E33DD7E9DCBAE04D92A4DA92B2CE209F65C38D8B9136D63B7EED576FEADDCC9B7581A79E8CD54E11B83FB6FC0A4063E4E2F677CBCDD355EDB1428C0721DC65168522720E92F09270AD149619F3EC120333C9E14EF8354D23BDA2F0530BDCE89248D5AFD53DA175C9AF539591863CC4BB28C317AB6E34D9B57E50711E91D7DB10AB206A3C12DC0A3F51112CAA860F961739FE40E56438B7E1FAE93AB0278259C591761F36FF5270F2F2E91109358BD3AA8EA13BCDF2005CF03095C62E9D658EC798DDDC778898E1ACF452FDDD000B2D711AE7730A818AEC44303A8EC55918FA827EC99026D5FFBF5A1C8DEAB6DB57821EFBAE50CD627563C28CB8B954CDCADB7F911995031D19EFE285551AA2E11F08E9E81ED93487B8045A99F5D25C6C07E1DA1925E2884443A64472381143CBF3BDCB3E6A03F989FFFADA4AAD49C2C857E239D60D5449A384B77C74AA34F4F8C494C79AA25902636A2F7FAB1C0CCA789E51AEB9715C0F1B3C634C0D260C5BECB25E87A1B5E782F16EEF97E5933ECC49FBF643EBAE76DD4B1E4C311086D934F57D7A2D6BF2942CE623F86B94508CDA9345B9370F85D99B3A833A39DB6E25A96C51C01C22A0F272F068F06C268F6FCE119C7A2D45B78D53A8E34360082CF48B4D80A20D7B11A478635205701445943C91D2F149683C68A7A7B69BA052865EE95C097A898B2A30FFA672120720A03372CDF790CC5E195E9C0EF6253EF71FF30DCF5D9E86DE7E168C15F315A21091E62EF23EB60C37647AE9190354ECE49154982C7255E2FE937291F1C4832EFDBA445838534E6F36941A7AEA0AC313EF3C368FDCD88D12DA4CC6FBDBEE085B37FFFC83B963C1A734E4D65045DFD3569CCE8BE35506E9DC22E3FF6D074A05398ED04D1F498E3CF93C2B10E928503B6E0CB56D3C1C4212FD5AA41CBB0581C89225C3DD1E982187F278503FA2222CAE24F4DB0C93791F403C5834308D967EBB18AB682AF2C327C0A7E730B7747E6DEEC743BAB9F75536FDADA50760082B9482730D6E1DD4172146893B015BB16197F7B9A3629C76AC50D60502759184B0CA1982AE891EAA469BC343F3DEB503972BF5A2E1CDDD2BD3F0DF9212E27F7DEC9B1C219F10AD612DA3AF06481D9A0A30B012AAACFDC4573935A69A9835ADE1B3AD40F083B8398AE521D26176F6001FE83D35F582DE8FCD702BFDDE7B869A703C91CE1EE7A686565CBE80B01C0B41AEFDBE032DD6C9B81277563BDE385D98C14CC30C2BB40C2BF73916E9FA317203A12BB3232814B4387B6BBD6575A3E5BEDB3F916954AB9C37A95D4E655BBDFC54EBD74F5D085AF97E59417BB9C31D24553EB15AEDEA7DCBDA0947687DA54DF16EFADD2B27E11ED816C3E8B89A481835580A74DD6FCC90F7675905149018206D8FA14A9DAFB8C194BCF23555687DE5CD85E13AE46D3C7D4D78D9D168C22A3D8F1F16CDE7385AC8D58A99025B970635A910778D438B7A023B038F190D597B4D91EFD3500D211060A24B045F267AA9A0D9D9671DFEF5AA2373E55EDC9213979C87164972857472B58AF378A338B6291D4BC155FCDA95A4EC03EC7A56155B653E840C92F85012D98247FB0869D432073A4075F00BC4560502EF04A04796F820A8DF3C1B70872AB07B496281BE1498220C00FA040DA7E075F278A4380DDAA97D0F6B97ABC7284D88F3EED7EA37B78DCB33EBF0CE591509EDF2D1D9A1786FE580EAEBAE1B69982781FF4A4216AAECCFE1A9BCAD3384EE7AE04613D2F1F7C4315D54ACE210A8AC833B13502CBCC763DE14F90916D4BB8A0B0155E280CE97C5075F8510C7605DD61D0D8EC2252BABFD6585843BC5D3850D87FE8B1EB8D08EB492ED908BAA98EA20E3EA1A8A042F256F39FF82A8BDD56D8F80D30010A8428C9476863B671F15AD7D3E1B7EF51F93E4AFE85083E3D03FF6FFB526FD732A4D3BDB67AC84BABE6DAC70E6784834AB3F19C5EECA66B245B2D2366A8DDA4D3CDE9BDDA533EA79030F942B83E8AE9DD4ABD552FDEBD41B6F32B67FA215DCCC808E93BB3EF5F6AF61058030FDB9157B34AB263705D7F79CA831C016BF24ADD717BD9E4187EAEBCBB0DC18BBD35954DC1DF62208C4D1D0BBC65316358FDCB69534501B32025706FFFF9BEEB72752741DF70752E79389767FAAE57A62B117CC362D24E1AB18C4616261D30E69DF96DF3B30B2325285F9B3999AC346FAE024EC6FA6756E971AE20C6C533BE1C6E2F25207B6A17A5062A861B7E36B6B9A56B6D7D56542C64C62E6DF29C51651095CEC060BE260EF18A6C6222B7A707C11B2D7BD71820E29162384E1365BB67D686FEAD2D2AC5FB28E0E6E35322B81F7DE3EAEF96359108F89127100C0CFA6A74504B30AC2E9759287E2E096CBBAD372AAB1BF230B20768A92D59C726F604F0B1EB779572D11B698073CC825D7D61246E85DD1893796C7319FFBB7A585858AB0748CAD9117EFB822FBF277804550AD3552A2E3AE672EB3CB8D86EF2BDFAFD1CBD870B01775AD11E6DB25B9E9EC68A06F9C67F6293A710EF305C617D644987845ADFEBD3A1D56F672139716E0F94839D47DFA0606A293622D00ECD391B7ECE89AC6B8EE605A446DD888675EC003BA1618C29EF6A289DF161B5DF340E790ABB7591D774AA0291C990F684584D3A65B9366658576E65A5319B0D0F3B961A29A292513E445CDBF1A1DA58A6BCDB3B458E7071C69CAA411ECFDD1AEB2213D954F9184BCAA1C1D72C2A2DBE82C3EAE0E592F99E7A015772F5F6BBF8682654222D5F4AB59B5FE02FFBF227485F2227248EB6C50AC5688B68053CC0667F42AE9DB714FB4B772B27D089BDAFC092768F6130790AB9A71084B1E5AEEFC7F887808F555E9BD96D767E913B5ED74607E83AAE45F1DB1BF138F7440A173568A42BB2E492DD90DA34DFCF30CF1C17F1999F8B3DC7E9CB34CA948A927071E8D8802E7780916DD1334A7F865B89FD86B9ED7C1C930110DACEF5D36F84F7547BBC773B58581A3D151D72CA1313F0CE3006A2BF56E088DAFF5B8BB874ADA9E1F167AFAE8A83826BCE8F891FC166919F39EAB8F3EA78A6DDFAED7F73883D168AD17E89DF5979158E37963246D25ED9930697332E9F437B62ED159AF55EEAB83F7FD209C355A3C2AD4052FA42037E0E5FC8AA15682744CD805D6D854455B13A4D7382A5D2145BE04D9E2F2D1C5396564B1ECE9E14F9E2335897DC7CB0E556FEE56ADF833DE7550739D4FDD01F85133D68E4CC9B65E5FA3AC0B66AA7C4E3ABBF7205E494689FF91AC90E2591A3856F60521C5B85DC7DC12E7003CB46DCE3B66C7E64752ADD3F44EDFA76348E7BC02A653D61692BB12D8022EB88A0AB9C380E122148D1C655A7B6DDA02EBA98FCFAE98D7908B69B0C3CD9B1A7A69BBE4E198042C145DA944CC9B78A96D6F9608963D0C5D21436DFA3C5E35419634D8A6BC778E9E23D4DF4C8E4D447C97744DC55A72B138D6662DB7DC35073541CB663E58145B26F6B1F4120BD62C296B5A2372CBDE8AE4920A81426343955A4713C8B541D2FD07B9A652B1C5AFB925DCB4875574E2C1063230D8A75AB0DF65328216C828D0BBF6CB7171C3348DF5A2E3A5B9A5867567221442D60631D9433A1EEEF080914D44C9A4449A400D7233C95129FC4697BF7033903067D69A3EAD1A89344482AB2FDD3D34999A67613D63E23E244DB468091CD795B85A77C400B8069F86199B1376CFB9CD4EE6D2AA2F810BE85DB514177863D0119F40FDDB8949085D681D5E05A66320F9C9885114EB357C2997AF667B6A722C8FBAAD0B95D27E8289B73BF49133903C67CB9E4754ECE8AF9BF9AA124A07BD83A0A13D3C2893339D7B46A8C945702CCBB4AEED21C19342A1F2357A17F292494EB6BA0B1A8EF1E222C70B05A634241DA81BAFC7B75DDC9018FBCD69DF2FB29F40DB2587FAB7C5B678F546594624613AE0D94D0BD28A858D30367B644F20740876A3A4FA92F8C5731EFD45FE1EFFAF8246BC52E92A1A03839642B3248ADC9C9B4BCC7ADB3E57C1AB6AB8437E08C256801B688E8B44D2811F2F25324C5106B762B0D1BC0BEFB1BECB28A8B7603AC2FA6580E72DF1CCEB18343C6C9CC7B8AB7951D30ABB41BACE39CE01CB85CB1E4C19A8CC464A33D4AAA760E4E222AD5CBCC499432E8139B1C41B392010B06B9C7D2FDBC9FC9124219C6B88C6E6222063B38E56948132599E7C0018E86A8DB2B787732E472F29FCDEB7DDC379CE97808477C095768831C4F0E61D65A77200630995767F455A036FA3A6898067462CC2AD57E25320E2B16CC460BDD35D4B554166A3837B053A89EF43887F1E3E6ACBF20AE2FA514EED93425742D97CC8F851987EB2DDF4D6A167DFD3C54954046C3BB844048F7788516927FC3A10D1FE1895648A663595A23B2F32A46B578F76FE7027B3BB42EB0ECB20F6E7C82B3267FD63506A20D5FD00DF42794554491B51F89138F1757A88051A5515C57F846765E8F9B1B391C609FBCE5E2E406F4AEC5966A43F8BCE25722CE5AACC4204165739DB78130C7E7042FD583FD795AD2FD05DE590D94CF04F150D7C183FC8AE8CB31A8289E2F5DFAB387DAD0B9B0FDBCF9C5E9BF40C8748AB37D9B688D225462B7C8C861960DA9FCE6DC84D0B2B2EFE11AEE75E6934EC02FF8D09E150D4F204944DA39BEE53DB06B638E51058BB5520370F279A6B259799A5562CBA77E621AB31F5B18180AF665D3B94652118F878560695DDA87614A9759087EC1C6B334142ECA475CD59F1D6F2379038D30F436C409FDE2C3784F0749541971D2A464297B908F2FCC2478564BFC4C10AFB60E5C527C1F9DAA789BFE904739BCEAE1FCF9E3928B46517C4A257ECA8137F725A61174D35E92F0F32F849D92BAAD0476FD25547EFA94FB1871CC4D1A11BEF38852A65C58FE58A7A3C2411F950A3E50917BA4FA789E6743A03EAC737BBAAA0644965F18422116071AE8057DE2432293B12761ADD161B0CDFB89D67BAFDDC90A9BD04193B883B968A90BAD88E88DA4C80B1229FE72B200309AC38FFFA4E010B1D4BF41FB22B2E0DF3AB9D6CEA49101BFE4FFBBCB401551D31D43F4F9F1196A421F5178565A5386EAC02B0B3E273649037FD73AE198962F216A174370CD00D99ECA21BA6D8ED187CF5EE4BDCE773B85039340FECA3312555624D178A90EA02E65EA6E5D1D5F0AD128085AE31D62841EC00D6246F00929C1F59BB829E71906BC05B0B8A34E8E9383B4114D7A9B328A4C61F076C3B29052286B5736CEB4E42ACDB3680D5BD7A57FF88C287F75D02E9BFE9A6DEBD58E3A0E8EF13A19E0AEC974122A6CD4E64F071DFE6002E82F4DEE1482B778D4CE76C080B9995FD8DE270D6D976AE6821AAD2E24535BB63F2F43FD4A487B7FC9B461AE8C71D04101142AA4AAC2AC5833B6C5D8C527CA619655F73FF1EE78B2CD8E9611A78736BD33B23D66D11E011698EBF3A5D10409925D5A52E7485B0DE6D6A24080F0E13EE500835D79D57E196A7065BC5333A17635917BBD085F657E3BEB894FF0ECDD88C748A5549BB45DA2A8868BDDC2A585F0AA6EA5BBC67785A4E343838A3265E0D7B4415FAEE17AABE4BF5FCDBC05FC88E48CF8F32C8A598F7132A3980110DFEE9C56F51E57ACCCE72B8E464B32420942BEA148877C7893FF78F9DFAAEC4F59724E3479A90D2862B797DE068869093EEA87774B4AB466511D34AF1137F721FBA6F5A94885189FF74EF4F22F749867A6A9394DC8B6C1F020E7D2845C2A98200AA1E403D68578151EB3836FA70B1F2A06B6495D82FA3555C6BF75656161D500D7274FA3488AAF0485C5220F4AFAC21DDF5B719CA8D253F661BBC0344B866F90C57D2E4898D28BA7C677C7DF4FC3EEB6BBC873E15AE3B9BDAFA8E0C961590FBB57F9E78BBA0A859BF18CADE519B86923B856402B8CBA007F2E459B9B93080FA4BB7EA611101DCE3F5B17D6C5CCFBD5186ABE25CFC968EDAF56333CC7A98190F2986CF2E91F18B2B41B5DA7F6FD9F4B77CEC0DC4D08EB7C25FEB0536449FA0EE60C22ABC1A2B27E517E62ED4686FD4663030B1E26D00C5896B0E1A7C5FE2404D77480F5C1DD3F470B3852C243582083CB8C056F0AAC7939E2EE347D66194BB760F9860F595B5197ABF6CD50DF074A44ED2F533D98AF2EDE9BAA99EC30110BA0B8753F7ED110D37416407342F50EEAE5E70C589DE5FC7FCFF15F02AF053E30E1CE408929944822311727ADD8A312D9DD2D1F4A26ABA910EE5BFA3C488088AF7AAEC5E3965146117F20C0329FEC778066E133AE189EF5D4E13AD4B4DD0E55E3A0B117058732E7BB6EBA5DB7A55EC861FEAFA8CCFD9CE558C7DF979B8A43019A7F5FC7F73F0B00B96B003288061C68E7953A7ECD6E9A0DEB2052532774260B08FFEDD68BC2D776E0A778C3839EC1C1B65D1B589BCCF9758EB7BEFE50E7437EC1F8852D5FF185A72F8B21D6C844BAF91042FA6E395552AD2B1B601B7EB8B593C85276E1C7665EF090D6FFC8DD7EEB8FED1514715F895465B6C3E94637E8AB46E5047C419BCF66D266AB9660B88DCCCF1EF2EB5C3311517013B5A72D76E7AE18A7B63C21BFD382F6CE3B35211FC6995BB9234D31DD0CE4AB87B92978DCC15A422C346DD800A8415D70BD54635CC691446470D4497A04DF5A9D89C01DDC73538703D178FA2FD50C6185BE8F112A36F40C7BD63CB75F01B354EB5F68234CEE1504DB0D312709EECD2CBA6BB09EFCB400700970957D862CF1724941438E88B109C2DFC8D627F4748892EFCFDA506B512AFC21FEBEE6B862AFAA3786838EDA03A7852D14EAB6A99218B376DEBF07562E974F228B0776CDBD4AA9C299C7D21DD5427A62F318E8F85B1A094D11FFA1A3A64CDD5D3007F11689F4569429785FFEB6BF780503CCAE11317B89E2AF172E45F0623755505D42ED9E354C893DD57523FE28F178D492799D7417244CABD951385712318A99C469B9D69540C6A92DD9D966DB81135EA189F9B3CA411570CE709D5BC06ED7F20F511601D61A835108F0D2983D7B0CB5354CE1FD55AE76A6F11581804EB478011A5968D77894E2451E61E38C7CBF5B15579F771AB864295C3507817AEACFFB59F53A32C4D877CD31F62EFA6ACA0F9E26AAD53C7E98803D291EA3A695DD3EB0622CDBD6D8805DFF6B934EF9DFBC37FFD95AF9B0AC3D13593E22B56E70F9903B8F6308B32A15473C2A579F08EAF2FD075A2FB0141F779DFB9C4D77B5D8597194714B9E30ACC3BC20EDE7A32B38862E95552117F585C00869C67EC7DF778FF792A20EEAA73861B060638473F53C438F7B9FA76A0F042EF72689722866D8E80FDFD26CA3653BFE373947C923846F6FA085C70B6D499D27CC2628E74A04F2799788352219B5D2C046AABC7EAFF98EE2BF95372AB137110C53576A54E317CA0C5C16D6EABC362524B3D3A8FC7AAC6264696E86378C8BE90A46552FDB5F2C1B8413EF1D26E00272873DFC6778B7B27E1400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/DBCHQT+AvenirNextLTPro-Light cguidfix
/F1.1/DBCHQT+AvenirNextLTPro-Light renmfont
%RBIBeginFontSubset: ONCVJZ+UniSansBold
%!FontType1-1.0: ONCVJZ+UniSansBold 001.001%%CreationDate: 2/9/19% Copyright 2019 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.001) readonly def/FullName (Uni Sans Bold) readonly def/FamilyName (Uni Sans Bold) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /ONCVJZ+UniSansBold def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /b putdup 34 /e putdup 35 /w putdup 36 /r putdup 37 /l putreadonly def/FontBBox {-85 -254 1040 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BECF3B23880744B5C455F021374C718821B95EB19E78F733BF3B26E3FA5423E9252343F8B51935B73C00BD700A9DEC437E14422ABF48289035D9280CD9A46CE0FF5394174C757B5C6429BF541E447356E7097C7729EECBD3BA9F05A1418EE6B166F234185BE065A413BE4E260189D94D69BE41E8A84440446085E9F8940212F276C57CE9F9CBA49EFE601C5A8896AA3877CB8E25F937B1F1C4355605AD94EFB9CEDB5D2E0B838869558B49C5CF7D4C293E9F9994E01731AABA7133895D174594175311B8F11314A7C90D54C7E1713532839E9F664BD29EC6409998D5B78C9ABC2C583CA405FB0B12DBF2E6B0C363D3158F0014DD30D93302E6704E871161D412B0A59CF9950A5CEF986377D0A20C9DA084FB3F7A14A5EB3C913EEB83578989C0D7C5598E665A43FA2D4EC27916E198B4F2C0B1DE2D4A86A1A6F9DA3C4B4E269A6110557E04F196C4A9531982A6E7C96E1CE30928FD37BFDBBF5E8DA5CC89B9B9FDF675028C520E057F48FA2ADB1F24D171EED1AB20E2311E7D5659F965515EAE1C7552EB41E13F6F49048BA694711876416CC72D6CFE0D4DB91A59B3F07E39DA1552F007F2E55D0702D47918CEC06B263E0E68EBA8641FBA3593C9E0F5A633EF26262B96390F506DCE5EE1783289B4F2DB4DB473ED92DED020D091CEA17B5F724881581B30F4074516371938A9E7AA7C90EDD78A9615F13D58132957AFA21ABB2C7B628EEDBCAA987D5A34AEAA03B5BF0AF27DCA6C6F7408CA3DCDBF864D72095E5BB6EE8E51890B23B955F7DA902E8DC09DD9DD02D19B77DDA83B25D8506D09CB2A8C21F9A1241C9DC462D21E0981C016D2CDED1681B499E229FA358DF094B659EA5F1DFBE5A7128DB968C291439D8967D3A9FEBE1C407D6615A0ABA6BBBEF9C169E36BF4924A9DDE7D6E8BBA0498E64C5AC9275D3DFA23C6D8CF6955BBB24511FF0BE30344260DFBCA729813392EFE768D1CB8D8D44DE6C20B1CB59E3A45FD33D7985ECB83252A36E0EAE846FC7D3D6DCA30C4C5BC1242174621526DE35C34900956EFB90A82B3F8E7CDDB04F5EE23CA55D0556961DFF7D173C854427B19A424718EE94058FF2E50765E1DEC5A1CA630020C2011191AAE2F9E30870C3D2F5C6B07EE1E0C651312DA0D7889EE3B9726A82BC140C5F854AAE5B113BFF94A34541A407806879446456B0556164704B16E2FA0CF90867D6A82F8432651D68EF82B890F434F30C3F73FEF6ED8F5BD572E5E03CB6562FDBCAE7FC2103756D5A22F6BBE25D2A581C81EA1B474050F2B9C3605EEA5E41942FAB859BC97066C3CC59CBAA0912F316ECC18897582A75FB28800D50B3887D1687B44845B32A3096CBCF2553E7FF00C1F1B907FBA0F87E7D768DE114AA8A59BD2ED12B7E0A614F0F3C579CA783E31897AC75FF44AEA40C486EE5466C88B2B68063BAA1C78BF23473FCBF9B6DC40A4D334EA5B90196B886A279227CACEEFEEC3996FF56E26B52FC17F2C4AD622932EB3154233A18F747A2AC7C98B8851F506A9488D86C86A5629889C1ACB9DCE574C68CA3F71F9414E9260349F9658ACFBCD76E73AFAB6E5B0FC14CB8AA60A1E849D2C69A00BEABDF0D9A1E9A6059832CB9BD3FB4250444325B00F9D15FF5B4CFE97D7D13E27E6E195D555619B791B0E2D6D8A69F9E9805BDA2226CA606F66816822387D31247BC39FF56713EAC833F714DF82051621E937F12EB27881B8A6BE7DB203D2F5DD7DFC8B61AD9148E161BC74AD69C97C01744AA12874BBFBD88EBC555D77961B9ADF984BB400700AF04D35E66B806C5E658A9406E215A8504858E745F9503704CFAB2A6882A609724C520A762D99D0338767274A6E2FB2FB429D9EBF050CBD4E9D0E46548742F69689D42DF4D0071291090D3ECF356DB1AA711D4012A6E392D221B019031D9D7487FD591F8B227C3A15D3E4A431FE600F5F8685A423F27F40B68443859632ADEC1DA6226CDBD0C88A7F021FB5201E1F84D0C897099649C6F0320ED0C7372182B401336014F75D05A7ABA7CEFCF4B376797891EC32FCAFDA4624DA87E15C8197D2E893983F4C1E57E5EB32D8EF16E345D025A8CE51C3AD42D664B9832EC6E8748BA88B2C5EE0420B36C82B1C067F8586911DE1A05C8634612D5CE26FA89778C508856AA63036037554B71DDB4209BC7DA4F9C50D8D3E0F491D56C6FA046430FF4AB2E1826010AEBC715501541F1F6481189BF7CE34DD206216476F2D2669E9DFDE8DC5B459F2C65EE933CF155B4DF28161AA79833149DF246B644BC61D1BBA2486B22AED497E0F861EAA059ED1658D236E30380DEAD1F65BAA4AA63399CF62AFA2B23AE6528A132D75D51C6003335FEB4B41A83C4EC840F39D58E46226CA2D01A4CDCF58C641370F99A7392780B26A96582AF90422E678939DB8FA47067C9A19CF192C6025E1DBA81E4E4BEBE82F36694278E1ED692C89A1428D3750BD438B5E94CE87D2903FC2D13D73962FBE8B50ED593C5B058F9E8C6B794B847DA36CE1B99CB8962590AF8048CB006BB30D9F66B17102D0668A329CB73831A90C917D6B30B1515687820C1268247C2433D01F22B6C465724B79070F8E6B17DD575F032A435DDD09B4901501C65A0DB6F9175F3B6339E3BE254103D4E3AEB108BDB9C3B03E569B52D23E092669CEEC9262C29307AAACE5C983C533B8B7D41CAC901400EE843478D5F5C518A4C67CC23C57946A59225EAC58FC9255EF99F48C1232C586B382DE1D46FB3410FE770A831C6D0FBCBDBE44CD7351F0D0CC58449E0068643014D7A945C54228F10D70C8B685CF24AD18F02C8478E5406996FE4FB07791DE552549C2C63226FC8022C2F2FBDFFE57CDC8EA51997B495B0AF76D4BCD2CF422AF4E4DDCEC5F6E982A2F42686BC349BF0F650271E01DAD26D97E5B20147511374212417EE6CCE50B002BCB19C61F395E2397D3EB8BC7FB5CB0796C31815F6F12CA5E8E7D1431FC30AACC51E76A4FE9228A1082C745CC7E00A4D57FEA07444E7C16C232208ECE4E35E2D9901A070C7AC6284CD9EEC33936C8E15C25A306895983F03FFF64829DE0DF57AE576A33C21553D72C0218236A73EF6EFA5985D4BD64B1078DC999DB1CB463A7302C314D883E25C5F2012E5096D56075102FD0F5550B73BA52A9D071C6184AF04BFD76D94706FC4F7696306E7CF692572B54AD8B1A7EBF366D93EB981E986653BD43D5AF4E723B989BCEA4E180D4210957C94C3F0E387EECF2DFE4C3EC1049D69B91535FFC1B5DF4ACCDB8BDA2E36B2147FB82C8479CC780461869331AFFF7EB3A783BC1A89A4190E5491DC7FE4E64F046B559466897926B83E6374482F7B9E704D2570961304F77DD110EA4B993F68A2C73970008A3900E7499397BC6A0665F0952D710330AD0E082F442C84A8B3E2A1C00DA5A93F418377935ACD7A613E1F7937D1B4B7E1C8164A6C88FCCD525E785DF668EDF75250AC6814EDE88A631D56C4DDBB57E308CA47FA493A83E1882B8990BB4D5C6A6DC546C07808C7FC8933386B72D79BA5083F3A7E7F9DD9E15C7DFB384BDA5248ABC772D956524F50C87C1371BA71FE031765451FBC025EAD7F08941E25562619AB8700BD40CEB425ED70E4C3205A462660537E328CF92F13FABF81AFDE2B6428E98EDBA9955F8ACC3C0911E63985064951F4DE6AAAA0EBDFA7798696F5A446FCB378414914A2B78DB4DAA180A4B40A972FB1B29A52782C133337DB5571CA6B2E2163BF2953A75DF1255559142669612EF92B3FE8A98A7430BF7033CB8275FD0B3290A3676821EDA833A7A60350529F6E5DFD8F2969A339A4F136B0882ADF835C4E42E493FE1DB244E2EA6746AB978F4260954425195F1993CDE6B1C7C9337F461598B83B61FD604F602424F4492CA28228FC5E18E70616562A763CA4FF157D2F27181D1361DDD35BF5AE5E8DD711086DD677BD93A4F1D9F272ECF4B5EBF02B51687568684C75E63AC35F35F36D6A8010931D00C7D7C25F40F6D2136DB8FEF80322705C620938ADA000E51E13C550B538303A6AFFCE61A6D001CA124EFE5C9417EA4FBFFF320942E2CB23079B4DED054269EF6E42C89B9D124832BFE5937F57E9A2CA6573DE2F596814B7A0660CCC9A850A03654BD36451C93728B99C610FE143B9B2B93ADFAB86709FC4AE468116B0C0BF1078C2FE8ED5FE0B9D25DE16BB5FE85DF3355BFF820FE14C551670833C1C648F7FA5FB378E5A8CCAAAB8F23E369BAE6C825F8A2D031D7551E741055476D79F8F02E26C78DC0D62A4810C47C33A80226A94FC48F8999E6D7E39FF170BD22E548FD8DD718E9E9857C2EB764E07659E16F45018C605FFA5C7CFA5F2368E1489CBF6F4DD2DC181CB264BEF23C0008D31A2BB048ADF776417A6E6E1511E0D9C16E8C14102971DB77089FD38135F2BC802D454D2D42ACF70C7BEB9899FE774C6C3E1FC1A7D8432B9A3F800BBCFA38945899880202E0218EBD1B1F4E38DCE8B792681DFA02A5F1BC44F375AE29DB2BA5EBF1C88104869D661FD8E572C9E188370E0FA6D6FAACED3863680AE6A325D4ABAF0A005AD75E9D150365C98376598AA0550B2D96BB89691EC25C8A2EB97D77D296FF15234E7861545161085E89FEEE8D25FF611DCC123064023BF54F03026D5EEDC82CB8B4FB3E3FCFE914399CD03DA59E88D0C100012BA613ACA038CBE22E4A2F733AC0F4A9EC49996C92B8CCD5BF14170449FA63BAFA72C6C3C3B8B14518E7F2B512C275C0A26B7B97F398C8BC3D60B122A554DE69112E59CF472743DF3DCC28403C2DD30C67C5E5FC191833918EE9C24053AC36EB964181B80428DE38C9ADEF24178D39FEF77CA4FC8E35C7F0BB5BDB5E28834C7ED0554C44A82098FF983AE8652A19F48EFD474EE0C49FD44BB52AA6592EAF91D11B77D92FE5A5A2909B071764DE4D804960E08CBFDC19B8E8C87CA157779B7A16CF05C669526CEF94427B020C92179452E01578C9EBAD325B411F9F00DAFFCBA4757B3CAF070989966E0BFA54FFDC3FE867AFF81785ABC54CFE525A0E10A7B6461668241A5F8F6057DAF1A7B48610C30B6E43E59146341815CC215A4F8138BDC9C53F060EB4D19C39D0D0D8F4709FDB2961C22D89D19DAEAA0546695842D8B56A455CC33139B33B19349703AD09DEC904F590CAF83336C70297E785663BBA3B047A27770AD861CE7C237ECB5D941EB8A3EB6BDF7E2391209C7599A47F585BD9D201369D6E3DB14945B555897B01535D06A29AF79F10F3836DD3C53EDA3904AA5EC6561731055263D711A17DB044EDCCBD7C54625B34D2BDEE080E233414B494899E5CFCF28DB3804A93B2B10A5363B0FDDCEAF9C6DA0688D0E4D0A53CA69366B168C6AF4071A46FC384F8A72AC9796F1330BD208E83D213C34909F0A73682E8D9E44DE2F5EB738972CEAA888209BCB9B916C90C3ECA5C78D8DECF10DC1B9082A613A420523D2BD250B2E6D8FB9184B04F8511F58408CE9848207BF3C1C02F80C6706EEF4C6A84CEAB86AA22FF637813A37B554E54F1B88C82DF989D468729F52AD66F2B0B46D27ADA56F1A5935B876D9A49EE03D6C1B6FB300F3D13753C07B873389C859E828BE8BCD97995CB567362B25DF2DFF948594B7E2376AA887990702A24378984998206245A5404EE53A7BDF53B1BDD0003B37F5F738D352E9B8BA4F5CD777FC5974485183CCE6BE22089FFA7480E39F836EF2AE5F6AB5D8E1D2CFFC41BCB29C97BABC60BC18CB95000D6394C87DE104799A1B79EF9231124E478F919A766969964291FB55F9941AABD378F11E0D636FC3E02028CFBE17E92FE18C2DC0D847C66581ECCE6A9781B40CA7F29884224D5C33D9F975F65173E8A2937C93AEFD78F9C7A5BBA5A6757F1032918752BA492F127AD58395EC5D1330F8E62CF74723F074171048BC5E7852DF8880FB5D6E8B359FB3048BB8665EB18AE0749602999E8C349EE043A73AB2651E56C3AFEC7B9FB765C65F52EE0C0B4A54016CCCAE6978FDCA960AD962EE50C9C0C269E98A5EC11B29168577AA309F130034CB3CBFB2A61F71074E90A8E397398C130A6AFB432FF52E4219214619639D2588B816D0D49D69C122BE55FD54D971D82390AE156921C5941951EF900D9C35BEBCD02ED0999A7BFF447E9A74D1A7B832B73515413E50DD8A12EC3666F50F6FA5BE88200AA94F340DD1EB0A7E6086B1ABB8825E35D55C2434D1527D56E6570B676F9F4E47457DEAFF60AB5F38F26C30FC5A6A6523A850370D0C99275BAC68C8B623C3CD6D88172FC3A9A00C5851FEF1BBF53DF379DE4ABACBDDAC0F3CD6F087AAB90960709E4ED6681759EE2DA45FE8BCFC083998A468C3761C42C42AE070FE30A8C133FB802A6A84C8D38629A2CB7E927372E3D25E4042B1472EC5D86809E3E1C340AB771D0F92AEF27687AAD918F9DD9B74A3CE113A06A24E8CF06AAA09926C82551B869A1667CA14286D3CF1594013690F4A8327C1DD9DA891B5E283B763F8FC9416BC1A31961A573A49CACB60496223A01A24A58D4704396787098298A77D995F93343357B443B9D432811B24D886C44AB227D40CABF0FA51928B4009E6E725339D9A4F7060C964E4CC20F9C1591A12CBDD04EC6A80C05B1BAE0C45CA5A402026EE920CE6867F0340FBFFD550984590344C05DD9690BADB1B9E53C39C1D5EB6A0AF5B4998835D7C83DDA2E1148C7F57577991070CB6DE5DDECECDE9D0FD6AC5AB309DDA555284D92EEB85625AABB04C8CA16216BE9C87BAF82C54F93125FC962169D064133C2BCBD78A49BBACC7AAFB206ECAD51B9A908167C497A7F93091360A2846F71EA60DC5105B3F11E8352B9EBEC7D74E5900AA9229C57298A9F39FC7796E8395171A1BF753CA8CD0E771D56976638F117509BCBD19146091904339D5148A69DFB72B1BE5AC21AC69B9EC1F95C62EA7544F0B668A2D5BFA30546F04586FF53E5EDF3428DB80A2697A5C0B81415D9B42EB23552AE584E15ACD2CE2CAE1438E1B404D6A994F36E0C0275FA4D5DBA22A41640EA6EDCA7E3D9643E5CBADE8FED78C5B416381BA289B61F3820B075D681550E1707B9BFDE9DE633BB74D2D42536DAA9276D3F93EA210E2CE931EBF97CA338CFC1C6B1B4CAA72D9982BAF6A50D7CE8E4F0F6D3FF88848652FFF03AA4E17633F56AC9D400AEE6ECC06BBAF0DE770C3639298CBAA19D8028A79978F800F178A26095519ABF8B3010315791D385BF6B9A53CFE25AD99C25B2F3C1CFC315BEDEE3FEA0EDC2A1A5454625BA6EBB3D472D898BBCF4E2B6B0E5DFA3ABFFDED09CC29C424EEDDD860C64FA1840B182040CFF9C622C2D1B284AD8AF20D725317A9534B2534C74098D906091907A5B18DFB608D051D1262BC7B0B4FC0FBA313ED30A1D52BA6C3F0C3E3715D0EC17CB8673FFB415118067ED4F6C3CEC3BE75AF06556DD7E1E1D2636CCEA5E112DA1C74EA42DCDA418A9E7F706DFFBD863E0EBC32AE7024E3E659D37DD9D9BE7924ECE3F14E6F9902DDE91F30DAC5B12558417882B7E768D6FC96C7485CB036BDFED87C035441234C809C5D1DAFCF6BE8FAE62C606FB00CBF54F62BDC08ADA13A6A373026C636872A0AAB5D2686A131469CCC6CC1FAAC21C4BEEF6AE75B35B87ABFEE57276B50B5B8E97624413541A69B59AAF8747BD50874A4AB72A51CF95505F8EAF257338DD2F505DE7FF93BD7C86F5216A8812EDAC2A4248AE30608324FA5E2CDD94A7536AB5D3C15DB5731044C2798A0ADD10D5B9A166E0220ACC9677E2A6E43A8F4B47DA87938FB9596AB4EFC29465189482FB1AD5360F10955548CFBE56FA5EB0CADF684160AADAD501BBFA7046270247797BE46E009D95BBF6FC7093C5FB297EDD68407138FC77C4AA7DCB68AED043687DE43B0FECE9DF9F69B8B4C66FAE485E2C14C401C08E5B3E248E9E812DD6FF911BD26057F950AF7EBCF4E18F99CF5FFC7B219BCA0A59B004786CA6522B12E01E94E660BC5DAF640AD86A3E331331ABB4097C6675CDC1967F2F73B36419B264F8BABD2B09689FE27D030599B7733887F45A1F4742937C259BD738A1B212C2F1EBD6CDD572990DB2960ED2C624C2F49D7652B6D2580514A38FBD867B9B008B52B2D09A437CF2D70FE897795F7631B41F4F39FC77DE9B8A56104EE01A12BF2F08521A176C1059339E927B8321B29C1229C4EC01E4A64DF3F74F36E773AE887DDEF622B3B97C3E506BD0EA34CC47CB9695C52B3A6EC856DF8A18EC4B1F6299DEEDC56721FAF350EAC0B42BBEF6F187FB57DD6D0B5E4F22202F7037024C22B5C3D0E5AD302B42F4871595F4FBCA4FBDD436D3EB34AFB74F13954B8825421356F1B0F92158D426EF1ACE7275F22F383B6F4702AC38271A3B229D57F6B409B11A86FD31DD025B1EA9150B93A07841BC69F13F6AA6801A8D2D4152C4C5ABE90E75554545693F9B82604D0D4BE7E2C7F1433F227EC85FDFABA21F838C711AEB3AA368DB922ED9AECB37D37D63C7FBCC8DCBC8097ED225D0A78252EA9BFE15AAE0E76D1BBBC3F30124DFE3172D4A5ACDA12E7314FEB42691C2010854A27F72D0B19EAAA775FBD7CC6F449365DB5DF88EC5F81E660B7E62558A34B1697EA48C3F9082E1B4A05C46D5B27FEED1897018C52635DDD3E0F49F021B6E5FA1B3C3155C4C2C959A867619AFC6122833A10FBE1A5755C23BB02A66DEFA6F65BBB8B52F10A559C77F7FBD3F3DFFE8F041C254F73813319709C8DD915EEB71BBB15C09F75D0E6871B87EDB59DF68A77AF04730DC5B7FDFFD70B469B1B0EF872C85503D86F27886801C5DAC412CB370E5E2D7B5A1333B969142FE488F9EA5C7F1ED41FA308E6F5D1E44CD8FD868DFC9CFA60D768E367128D565F6FFA29C5CA8FD75139976608D68D1B05A535055CE0A24567A90C7D57496E6FE710C1CD4BD3F70BD30DDA2508420DDA8B52896D63971D0EFD2BC69D5D9B360BF0D37564DA60EFFC4552F724628CE8F267B27D5CCA995227CFF9E83E31B324205E2B48886BD766744C4F0CFBD867DF54613156E866A8C457506B29D359ACB1B1D6D868D1E323ABED8404163ED3641152EF3B9E4439E93A2021B4EEB8E70E00379E59D60991B81540F3135EDB14701857D738D0AB0246A6C1168E210F39E652C62DD0DB9991A5532D7F10D4EB213C468067896DA8251EE26864B1D197DF3D2847F51E45012F479210327AAE4B8D907E55CCF2DE4420F32EF862811A5E7A7B39677028C8DDD2DFD6A5E074535AE1CE8F3572C613CCC6B7C34B3D9159F8883983620BC4DA2DE537D9985BCA7B4C160148706CEDD86AF3576579C967BA6380F870387C5F01FAD31B3F0E00F367B448D8E4B5F5FECD7F9A41978A61B193F3606628385B9378A926336EDC4638143602660677C704325556676A79045014A36F35D5D1640E13F936A79D0AD55E7085681C0C19BDA0AD76814D69DA5F5469E7D832AE56339AFDE894C168853BA350315FCF66633565F0FCA7F2A64352A3D0133F66CA7B6C9AF79504400A654A1FAA62F8A45C4F0496FC0A82D860736F0741F8E7A700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/ONCVJZ+UniSansBold cguidfix
/F2.1/ONCVJZ+UniSansBold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.1793052 0.20333718 0.3612617 sc
0.60000002 i
q
0 0 220 31 rc
1 0 0 -1 -1 31 cm
/F1.1[ 18.280001 0 0 -18.280001 0 0]sf
0 30 m
(!"#$"%&"'\(\)*"++"%,-.%\)#/'"\(0%)[ 13.911080 10.364760 4.423760 10.565840 10.364760 4.570000 9.249680 10.364760 10.565840 6.306600 7.933520 5.721640 10.364760 4.442040 4.442040 10.364760 4.570000 9.633560 10.565840 5.319480 4.570000 7.933520 4.423760 9.012040 10.565840 10.364760 6.306600 4.624840 0.000000 ] xS
Q
0.33333334 0.30588236 0.53725493 sc
q
0 0 220 56 rc
1 0 0 -1 -1 57 cm
/F2.1[ 45.279999 0 0 -45.279999 0 0]sf
0 34 m
(!"#"$!%)[ 24.659962 23.256282 32.946202 23.527962 17.007642 24.659962 0.000000 ] xS
ep
end
